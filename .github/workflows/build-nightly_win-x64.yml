name: Build Nightly

on:
  push:
    branches: [ "dev" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:

  build:
    name: Build
    strategy:
      matrix:
        rid: [ 'win-x64', 'win-arm64', 'osx-arm64' ]

    runs-on: windows-latest

    env:
      OUTPUT_DIR: ./_Pack

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Create Directory
      shell: pwsh
      run: New-Item -ItemType Directory -ErrorAction SilentlyContinue ${{ env.OUTPUT_DIR }}/${{ matrix.rid }}

    # ビルド (Windows)
    - if: ${{ startsWith(matrix.rid, 'win') }}
      name: Build
      run: ./build.cmd --runtime ${{ matrix.rid }} --releasechannel nightly --releasenumber ${{ github.sha }}

    - if: ${{ startsWith(matrix.rid, 'win') }}
      name: Build Installer
      run: ./build.cmd buildinstaller --runtime ${{ matrix.rid }} --releasechannel nightly --releasenumber ${{ github.sha }}

    # ビルド (macOS)
    - if: ${{ startsWith(matrix.rid, 'osx') }}
      name: Build and Bundle
      run: ./build.cmd bundleapp --runtime ${{ matrix.rid }} --releasechannel nightly --releasenumber ${{ github.sha }}


    # アップロード (Windows)
    - if: ${{ startsWith(matrix.rid, 'win') }}
      name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.rid }}
        path: ${{ env.OUTPUT_DIR }}/${{ matrix.rid }}/naget_Setup.exe

    # アップロード (macOS)
    - if: ${{ startsWith(matrix.rid, 'osx') }}
      name: Upload Bundle
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.rid }}
        path: ${{ env.OUTPUT_DIR }}/${{ matrix.rid }}/naget.app

  update-nightly-releases:
    name: Update Nightly Releases
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: build-*
          path: /
          merge-multiple: true

      # - name: Generate GitHub Token
      #   id: generate_token
      #   uses: actions/create-github-app-token@v2
      #   with:
      #     app-id: ${{ secrets.RELEASES_REPO_APP_ID }}
      #     private-key: ${{ secrets.RELEASES_REPO_PRIVATE_KEY }}
      #     owner: ${{ github.repository_owner }}
      #     repositories: |
      #       naget-Releases

      # - name: Update Nightly Release (Public)
      #   uses: andelf/nightly-release@main
      #   env:
      #     GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      #   with:
      #     tag_name: nightly
      #     name: 'Nightly Build'
      #     prerelease: true
      #     body: |
      #       Nightly Build - Commit `${{ github.sha }}`
      #       - ${{ github.event.head_commit.message }}
      #     files: |
      #       /naget_Setup.exe

      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Nightly Build'
          prerelease: true
          body: |
            Nightly Build - Commit `${{ github.sha }}`
            - ${{ github.event.head_commit.message }}
          files: |
            /naget_Setup.exe
            /naget.app

      - name: Delete Build Artifact
        uses: GeekyEggo/delete-artifact@v5
        with:
          name: build-*
